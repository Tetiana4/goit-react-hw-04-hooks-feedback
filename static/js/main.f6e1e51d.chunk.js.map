{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","components/App/App.jsx","index.js"],"names":["Container","styled","div","Title","h2","Button","button","List","li","FeedbackOptions","options","onHandleButton","map","option","type","onClick","propType","PropTypes","arrayOf","exact","string","isRequired","Message","p","Notification","message","SectionS","section","Section","title","children","protoTypes","node","ul","Item","Statistics","onGood","onNeutral","onBad","onTotal","onPercentage","App","useState","good","neutral","bad","state","setState","countTotalFeedback","Object","values","reduce","acc","value","keys","isShowStatistics","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAEaA,EAAYC,IAAOC,IAAV,qGAOTC,EAAQF,IAAOG,GAAV,2HAQLC,EAASJ,IAAOK,OAAV,+TAmBNC,EAAON,IAAOO,GAAV,kJ,OChCF,SAASC,EAAT,GAAuD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,eACjD,OACE,eAACX,EAAD,WACE,cAACG,EAAD,oCACCO,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACN,EAAD,UACE,cAACF,EAAD,CAAQS,KAAK,SAASC,QAAS,kBAAMJ,EAAeE,IAApD,SACGA,KAFMA,SAUnBJ,EAAgBO,SAAW,CACzBN,QAASO,IAAUC,QACjBD,IAAUE,MAAM,CACdN,OAAQI,IAAUG,OAAOC,eCpBxB,I,QAAMC,EAAUrB,IAAOsB,EAAV,oGCMLC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACH,EAAD,UAAUG,KCHNC,EAAWzB,IAAO0B,QAAV,+EAKRxB,EAAQF,IAAOG,GAAV,+ICHZwB,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACJ,EAAD,WACE,cAAC,EAAD,UAAQG,IACPC,MAKQF,IAEfA,EAAQG,WAAa,CACnBF,MAAOZ,IAAUG,OACjBU,SAAUb,IAAUe,MCff,IAAMhC,EAAYC,IAAOgC,GAAV,mDAITC,EAAOjC,IAAOO,GAAV,6GCQF2B,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,QAASC,EAAtC,EAAsCA,aAAtC,OACjB,eAAC,EAAD,WACE,eAACN,EAAD,oBAAaE,KACb,eAACF,EAAD,uBAAgBG,KAChB,eAACH,EAAD,mBAAYI,KACZ,eAACJ,EAAD,qBAAcK,KACd,eAACL,EAAD,iCAA0BM,EAA1B,WCHW,SAASC,IACtB,MAA0BC,mBAAS,CAAEC,KAAM,EAAGC,QAAS,EAAGC,IAAK,IAA/D,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAqB,WACzB,OAAOC,OAAOC,OAAOJ,GAAOK,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAU5D3C,EAAUuC,OAAOK,KAAKR,GACtBS,EAA4C,IAAzBP,IAEzB,OACE,qCACE,cAACvC,EAAD,CAAiBC,QAASA,EAASC,eARjB,SAAA0C,GACpBN,GAAS,SAAAS,GAAS,kCAAUA,GAAV,kBAAsBH,EAAQG,EAAUH,GAAS,UAShEE,GACC,cAAC,EAAD,CAAS1B,MAAOM,EAAhB,SACE,cAAC,EAAD,CACEC,OAAQU,EAAMH,KACdN,UAAWS,EAAMF,QACjBN,MAAOQ,EAAMD,IACbN,QAASS,IACTR,aApBDiB,KAAKC,MAAoB,IAAbZ,EAAMH,KAAcK,UAwBnCO,GAAoB,cAAC,EAAD,CAAc9B,QAAQ,yB,MClClDkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpB,EAAD,MAEFqB,SAASC,eAAe,W","file":"static/js/main.f6e1e51d.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 50px;\n\n  background-color: #cea9a1;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n\n  color: #452c27;\n  text-transform: uppercase;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 80px;\n  height: 30px;\n\n  background-color: #452c27;\n  color: #c69a91;\n\n  border-radius: 10px;\n  border: 5px;\n  cursor: pointer;\n  transition: all 0.25s linear 0s;\n\n  &:hover {\n    background: #cea9a1;\n    color: #452c27;\n    box-shadow: inset 0 0 0 1px #452c27;\n  }\n`;\n\nexport const List = styled.li`\n  margin: 0 10px;\n  display: inline-flex;\n  justify-content: center;\n  text-align: center;\n\n  list-style: none;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Title, List, Button } from './FeedbackOptions.styled';\n\nexport default function FeedbackOptions({ options, onHandleButton }) {\n  return (\n    <Container>\n      <Title>Please leave feedback</Title>\n      {options.map(option => (\n        <List key={option}>\n          <Button type=\"button\" onClick={() => onHandleButton(option)}>\n            {option}\n          </Button>\n        </List>\n      ))}\n    </Container>\n  );\n}\n\nFeedbackOptions.propType = {\n  options: PropTypes.arrayOf(\n    PropTypes.exact({\n      option: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  text-align: center;\n  text-transform: uppercase;\n  color: #ffe4e1;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const SectionS = styled.section`\n  color: #eae8e8;\n  margin: 0;\n  padding: 50px;\n`;\nexport const Title = styled.h2`\n  margin: 0 0 50px;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 30px;\n\n  color: #ffe4e1;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SectionS, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionS>\n      <Title>{title}</Title>\n      {children}\n    </SectionS>\n  );\n};\n\nexport default Section;\n\nSection.protoTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.ul`\n  text-align: center;\n`;\n\nexport const Item = styled.li`\n  margin-top: 20px;\n  list-style: none;\n  color: #cea9a1;\n  font-size: 24px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Item } from './Statistics.styled';\n\nconst Statistics = ({ onGood, onNeutral, onBad, onTotal, onPercentage }) => (\n  <Container>\n    <Item>Good: {onGood}</Item>\n    <Item>Neutral: {onNeutral}</Item>\n    <Item>Bad: {onBad}</Item>\n    <Item>Total: {onTotal}</Item>\n    <Item>Positive feedback: {onPercentage}%</Item>\n  </Container>\n);\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  onGood: PropTypes.number.isRequired,\n  onNeutral: PropTypes.number.isRequired,\n  onBad: PropTypes.number.isRequired,\n  onTotal: PropTypes.number.isRequired,\n  onPercentage: PropTypes.number.isRequired,\n};\n","import { useState } from 'react';\n\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Notification from '../Notification/Notification';\nimport Section from '../Section/Section';\nimport Statistics from '../Statistics/Statistics';\n\nexport default function App() {\n  const [state, setState] = useState({ good: 0, neutral: 0, bad: 0 });\n\n  const countTotalFeedback = () => {\n    return Object.values(state).reduce((acc, value) => acc + value, 0);\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((state.good * 100) / countTotalFeedback());\n  };\n\n  const leaveFeedback = value => {\n    setState(prevState => ({ ...prevState, [value]: prevState[value] + 1 }));\n  };\n  const options = Object.keys(state);\n  const isShowStatistics = countTotalFeedback() !== 0;\n\n  return (\n    <>\n      <FeedbackOptions options={options} onHandleButton={leaveFeedback} />\n\n      {isShowStatistics && (\n        <Section title={Statistics}>\n          <Statistics\n            onGood={state.good}\n            onNeutral={state.neutral}\n            onBad={state.bad}\n            onTotal={countTotalFeedback()}\n            onPercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      )}\n      {!isShowStatistics && <Notification message=\"No feedback given\" />}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}