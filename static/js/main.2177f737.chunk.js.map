{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.styled.js","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Notification/Notification.styled.js","Components/Notification/Notification.jsx","Components/Section/Section.jsx","Components/Statistics/Statistics.styled.js","Components/Statistics/Statistics.jsx","Components/App/App.jsx","reportWebVitals.js","index.js"],"names":["Container","styled","div","Title","h2","Button","button","List","li","FeedbackOptions","options","onHandleButton","Object","keys","map","option","type","onClick","propType","PropTypes","arrayOf","exact","string","isRequired","Message","p","Notification","message","Section","title","children","protoTypes","Statistics","onGood","onNeutral","onBad","onTotal","onPercentage","App","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedback","value","prevGood","prevNeutral","prevBad","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEaA,EAAYC,IAAOC,IAAV,qGAOTC,EAAQF,IAAOG,GAAV,2HAQLC,EAASJ,IAAOK,OAAV,6SAkBNC,EAAON,IAAOO,GAAV,kJ,OC/BF,SAASC,EAAT,GAAuD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,eAChD,OACG,eAACX,EAAD,WACE,cAACG,EAAD,oCACGS,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAM,OAC9B,cAACR,EAAD,UACE,cAACF,EAAD,CAAQW,KAAK,SAASC,QAAS,kBAAMN,EAAeI,IAApD,SACGA,KAFMA,SAYvBN,EAAgBS,SAAW,CACzBR,QAASS,IAAUC,QACjBD,IAAUE,MAAM,CACdN,OAAQI,IAAUG,OAAOC,eCtBxB,I,IAAMC,EAAUvB,IAAOwB,EAAV,oGCKLC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACH,EAAD,UAAUG,KCDbC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MAKQF,IAEfA,EAAQG,WAAa,CACnBF,MAAOV,IAAUG,OAAOC,YCbnB,IAAMvB,EAAYC,IAAOC,IAAV,mDAITC,EAAQF,IAAOG,GAAV,kJCQH4B,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,QAASC,EAAtC,EAAsCA,aAAtC,OACjB,eAAC,EAAD,WACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCFW,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAGMC,EAAqB,WACzB,OAAON,EAAOE,EAAUE,GAqB5B,OACM,qCACE,cAACnC,EAAD,CACEC,QAAS,CAAE8B,OAAME,UAASE,OAC1BjC,eAlBc,SAAAoC,GACpB,OAAQA,GACN,IAAK,OACHN,GAAQ,SAAAO,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHL,GAAW,SAAAM,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHJ,GAAO,SAAAK,GAAO,OAAIA,EAAU,KAC5B,MACF,QAAS,WAUe,IAAzBJ,IACC,cAAC,EAAD,CAAcnB,QAAQ,sBAElB,eAAC,EAAD,WACE,cAAC,EAAD,0BACA,cAAC,EAAD,CACEM,OAAQO,EACRN,UAAWQ,EACXP,MAAOS,EACPR,QAASU,IACTT,aAlCHc,KAAKC,MAAc,IAAPZ,EAAcM,aCnBrC,IAYeO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1B,EAAD,MAEF2B,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.2177f737.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 50px;\n\n  background-color: #cea9a1;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n\n  color: #eee2df;\n  text-transform: uppercase;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 80px;\n  height: 30px;\n\n  background-color: #452c27;\n  color: #c69a91;\n\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.25s linear 0s;\n  &:hover,\n  &:focus {\n    border: 1px solid #cea9a1;\n    transform: scale(1.1);\n  }\n`;\n\nexport const List = styled.li`\n  margin: 0 10px;\n  display: inline-flex;\n  justify-content: center;\n  text-align: center;\n\n  list-style: none;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Title, List, Button } from './FeedbackOptions.styled';\n\nexport default function FeedbackOptions({ options, onHandleButton }) {\n   return (\n      <Container>\n        <Title>Please leave feedback</Title>       \n          {Object.keys(options).map(option => (\n            <List key={option}>\n              <Button type=\"button\" onClick={() => onHandleButton(option)}>\n                {option}\n              </Button>\n            </List>\n          ))}\n      </Container>\n    );\n  }\n\n\n\nFeedbackOptions.propType = {\n  options: PropTypes.arrayOf(\n    PropTypes.exact({\n      option: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  text-align: center;\n  text-transform: uppercase;\n  color: #452c27;\n`;\n","import React from 'react';\nimport { Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.protoTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 50px;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 20px;\n\n  color: #452c27;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from './Statistics.styled';\n\nconst Statistics = ({ onGood, onNeutral, onBad, onTotal, onPercentage }) => (\n  <Container>\n    <p>Good: {onGood}</p>\n    <p>Neutral: {onNeutral}</p>\n    <p>Bad: {onBad}</p>\n    <p>Total: {onTotal}</p>\n    <p>Positive feedback: {onPercentage}%</p>\n  </Container>\n);\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  onGood: PropTypes.number.isRequired,\n  onNeutral: PropTypes.number.isRequired,\n  onBad: PropTypes.number.isRequired,\n  onTotal: PropTypes.number.isRequired,\n  onPercentage: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\n\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Notification from '../Notification/Notification';\nimport Section from '../Section/Section';\nimport Statistics from '../Statistics/Statistics';\nimport { Title } from '../Statistics/Statistics.styled';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n\n  const countTotalFeedback = () =>{\n    return good + neutral + bad;  \n  }\n\n  const countPositiveFeedbackPercentage=()=> {\n    return Math.round((good * 100) / countTotalFeedback());\n  }\n\n  const leaveFeedback = value => {\n    switch (value) {\n      case 'good':\n        setGood(prevGood => prevGood + 1 );\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1 );\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1 )\n        break;\n      default: return;\n    }\n  };\nreturn (\n      <>\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onHandleButton={leaveFeedback}\n        />\n\n    {countTotalFeedback() === 0 ? (\n      <Notification message=\"No feedback given\" />\n    ) : (\n          <Section>\n            <Title>Statistics:</Title>\n            <Statistics\n              onGood={good}\n              onNeutral={neutral}\n              onBad={bad}\n              onTotal={countTotalFeedback()}\n              onPercentage={countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n      </>\n    );\n    \n  }\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}